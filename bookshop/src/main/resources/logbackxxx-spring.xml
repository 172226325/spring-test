<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">

	<!--
		只在非生产环境往控制台打印日志
		通过自定义属性 TO_CONSOLE 来进行控制
		TO_CONSOLE属性会在下面的logger来使用 对应logger的additivity属性，其值用来代表是否使用父logger的appender
		，指的就是向控制台打印日志。
	-->

	<!--生产环境-->
	<springProfile name="pro">
		<property name="TO_CONSOLE" value="false" />
	</springProfile>
	<!--非生产环境-->
	<springProfile name="!pro">
		<property name="TO_CONSOLE" value="true" />
	</springProfile>

	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}:%line - %msg%n</pattern>
			<charset>UTF-8</charset>
		</encoder>
	</appender>

	<!-- 文件输出 按照每天生成日志文件 -->
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/${LOG_FILE}</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- rollover daily -->
			<fileNamePattern>${LOG_PATH}/${LOG_FILE}-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- or whenever the file size reaches 100MB -->
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}:%line - %msg%n</pattern>
			<charset>UTF-8</charset>
		</encoder>
	</appender>

	<!-- 日志输出级别 -->
	<root level="INFO">
		<appender-ref ref="STDOUT" />
	</root>

	<!-- 所有com开头的包下的类 的日志配置 -->
	<logger name="com" level="INFO" additivity="${TO_CONSOLE}">
		<appender-ref ref="FILE"/>
	</logger>
	
	<logger name="org" level="INFO" additivity="${TO_CONSOLE}">
		<appender-ref ref="FILE"/>
	</logger>

</configuration>